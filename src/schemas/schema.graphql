extend type Product {
    "Custom data for some purpose documented here"
    myf: String

    "Store View Code"
    storeViewCode: String

    "Attribute View Code"
    attributeSetCode: String
}

extend type CatalogItemProduct {
    "Custom data for some purpose documented here"
    myf: String

    "Store View Code"
    storeViewCode: String

    "Attribute View Code"
    attributeSetCode: String
}


extend input ProductInput {
  "Custom data for some purpose documented here"
  myf: String

  "Store View Code"
  storeViewCode: String

  "Attribute View Code"
  attributeSetCode: String
}

input VariantInputBulk {
    "Variants input array"
    variants: [ProductVariantInput]!

    "Product Id"
    productId: ID!

    "The shop id"
    shopId: ID!
}

"Response payload of `createProductVariant` mutation"
type VariantInputBulkPayload  {
    "The same string you sent with the mutation params, for matching mutation calls with their responses"
    clientMutationId: String

    "The created product variants"
    variants: [ProductVariant]!
}

# this schema allows the following mutation:
extend type Mutation {
    "Create product variants in bulk"
    bulkInsertVariants (
        "Mutation input"
        input: VariantInputBulk!
    ): VariantInputBulkPayload
}
